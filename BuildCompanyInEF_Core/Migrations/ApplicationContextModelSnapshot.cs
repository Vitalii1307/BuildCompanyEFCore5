// <auto-generated />
using System;
using BuildCompanyInEF_Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BuildCompanyInEF_Core.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BuildCompanyInEF_Core.ConstructionСompany", b =>
                {
                    b.Property<int>("ConstructionСompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("USREOUCode")
                        .HasColumnType("int");

                    b.HasKey("ConstructionСompanyId");

                    b.ToTable("ConstructionCompanies");
                });

            modelBuilder.Entity("BuildCompanyInEF_Core.Entities.Brigade", b =>
                {
                    b.Property<int>("BrigadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("WorkShift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkingDays")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrigadeId");

                    b.ToTable("Brigades");
                });

            modelBuilder.Entity("BuildCompanyInEF_Core.Entities.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("BuildCompanyInEF_Core.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConstructionCompanyConstructionСompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.HasIndex("ConstructionCompanyConstructionСompanyId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("BuildCompanyInEF_Core.Entities.DirectWork", b =>
                {
                    b.Property<int>("DirectWorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrigadeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("PriceOf")
                        .HasColumnType("int");

                    b.HasKey("DirectWorkId");

                    b.HasIndex("BrigadeId");

                    b.HasIndex("OrderId");

                    b.ToTable("DirectWorks");
                });

            modelBuilder.Entity("BuildCompanyInEF_Core.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdentificationCode")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("BuildCompanyInEF_Core.Entities.Equipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DirectWorkId")
                        .HasColumnType("int");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SerialNumber")
                        .HasColumnType("int");

                    b.HasKey("EquipmentId");

                    b.HasIndex("DirectWorkId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("BuildCompanyInEF_Core.Entities.WorkPlan", b =>
                {
                    b.Property<int>("BrigadeId")
                        .HasColumnType("int");

                    b.Property<int>("WorkingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTimeShift")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("EquipmentId")
                        .HasColumnType("int");

                    b.HasKey("BrigadeId", "WorkingId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("WorkingId");

                    b.ToTable("WorkPlan");
                });

            modelBuilder.Entity("BuildCompanyInEF_Core.Entities.Working", b =>
                {
                    b.Property<int>("WorkingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdentificationCode")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("Specialty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkingId");

                    b.ToTable("Workings");
                });

            modelBuilder.Entity("BuildCompanyInEF_Core.Entities.WorkingObject", b =>
                {
                    b.Property<int>("WorkingObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("InventoryEquipment")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkingObjectId");

                    b.ToTable("WorkingObjects");
                });

            modelBuilder.Entity("BuildCompanyInEF_Core.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApproximatePrice")
                        .HasColumnType("int");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyConstructionСompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Task")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WorkingObjectId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("ClientId");

                    b.HasIndex("CompanyConstructionСompanyId");

                    b.HasIndex("WorkingObjectId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BuildCompanyInEF_Core.Entities.Department", b =>
                {
                    b.HasOne("BuildCompanyInEF_Core.ConstructionСompany", "ConstructionCompany")
                        .WithMany("Departments")
                        .HasForeignKey("ConstructionCompanyConstructionСompanyId");

                    b.Navigation("ConstructionCompany");
                });

            modelBuilder.Entity("BuildCompanyInEF_Core.Entities.DirectWork", b =>
                {
                    b.HasOne("BuildCompanyInEF_Core.Entities.Brigade", "Brigade")
                        .WithMany("DirectWorks")
                        .HasForeignKey("BrigadeId");

                    b.HasOne("BuildCompanyInEF_Core.Order", "Order")
                        .WithMany("DirectWorks")
                        .HasForeignKey("OrderId");

                    b.Navigation("Brigade");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BuildCompanyInEF_Core.Entities.Employee", b =>
                {
                    b.HasOne("BuildCompanyInEF_Core.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("BuildCompanyInEF_Core.Entities.Equipment", b =>
                {
                    b.HasOne("BuildCompanyInEF_Core.Entities.DirectWork", null)
                        .WithMany("Equipments")
                        .HasForeignKey("DirectWorkId");
                });

            modelBuilder.Entity("BuildCompanyInEF_Core.Entities.WorkPlan", b =>
                {
                    b.HasOne("BuildCompanyInEF_Core.Entities.Brigade", "Brigade")
                        .WithMany("WorkPlans")
                        .HasForeignKey("BrigadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildCompanyInEF_Core.Entities.Equipment", null)
                        .WithMany("WorkPlans")
                        .HasForeignKey("EquipmentId");

                    b.HasOne("BuildCompanyInEF_Core.Entities.Working", "Working")
                        .WithMany("WorkPlans")
                        .HasForeignKey("WorkingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brigade");

                    b.Navigation("Working");
                });

            modelBuilder.Entity("BuildCompanyInEF_Core.Order", b =>
                {
                    b.HasOne("BuildCompanyInEF_Core.Entities.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BuildCompanyInEF_Core.ConstructionСompany", "Company")
                        .WithMany("Orders")
                        .HasForeignKey("CompanyConstructionСompanyId");

                    b.HasOne("BuildCompanyInEF_Core.Entities.WorkingObject", "WorkingObject")
                        .WithMany("Orders")
                        .HasForeignKey("WorkingObjectId");

                    b.Navigation("Client");

                    b.Navigation("Company");

                    b.Navigation("WorkingObject");
                });

            modelBuilder.Entity("BuildCompanyInEF_Core.ConstructionСompany", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BuildCompanyInEF_Core.Entities.Brigade", b =>
                {
                    b.Navigation("DirectWorks");

                    b.Navigation("WorkPlans");
                });

            modelBuilder.Entity("BuildCompanyInEF_Core.Entities.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BuildCompanyInEF_Core.Entities.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("BuildCompanyInEF_Core.Entities.DirectWork", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("BuildCompanyInEF_Core.Entities.Equipment", b =>
                {
                    b.Navigation("WorkPlans");
                });

            modelBuilder.Entity("BuildCompanyInEF_Core.Entities.Working", b =>
                {
                    b.Navigation("WorkPlans");
                });

            modelBuilder.Entity("BuildCompanyInEF_Core.Entities.WorkingObject", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BuildCompanyInEF_Core.Order", b =>
                {
                    b.Navigation("DirectWorks");
                });
#pragma warning restore 612, 618
        }
    }
}
